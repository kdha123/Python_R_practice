#ctrl + enter
a <- 3
b <- 5
a+b
#ctrl + enter
#ctrl + l
a <- 3
b <- 5
a+b
#ctrl + enter 실행하기
#ctrl + l 화면지우기
a <- 3
b <- 5
a+b
a = 10
a = 'hi python'
a = "hi!"
a = hi
a <- hi
ls()
rm(list=ls())
a <- 3
b <- 5
#r  패키지
dim(available.packages())
installed.packages()
#r  패키지
dim(available.packages())
# r 패키지 설치와 제거
install.packages("ggplot2")
search()
library(ggplot2)
search() #메모리에 로딩된 패키지
remove.packages("ggplot2") #패키지 제거
library(ggplot2) # library로 준비를 시켜줘야함.
library(ggplot2) # library로 준비를 시켜줘야함.
search() #메모리에 로딩된 패키지
remove.packages("ggplot2") #패키지 제거
library(ggplot2) # library로 준비를 시켜줘야함.
library(ggplot2)
search() #메모리에 로딩된 패키지
remove.packages("ggplot2") #패키지 제거
# r 에서 제공하는 데이터
data()
iris
car
cars
# 간단한 입출력
getwd()
write.table(iris,'iris.csv')
write.table(iris,'iris.csv',row.names = F)
write.table(iris,'iris.csv')
write.table(iris,'iris2.csv',row.names = F)
write.table(iris,'iris3.csv',row.names = F,quote = F)
read.csv('s.csv')
read.table('s.csv')
read.csv('s.csv')
s <- read.table('s.csv')
s
s <- read.csv('s.csv')
s
help("read.table")
s <- read.table('s.csv', header = F)
s
s <- read.csv('s.csv')
s
s <- read.table('s.csv', header = T)
s
s <- read.table('s.csv', header = T, sep = ',')
s
s<-read.table(file = 'clipboard', header = T)
s<-read.table(file = 'clipboard', header = T)
s
name<- '홍길동'
age <- 20
hobby <- '달리기'
mode(name)
mode(hobby)
mode(age)
mode(is1004)
is1004<-T
mode(is1004)
class(name)
class(age)
class(hobby)
class(is1004)
v1
# 벡터 : 1차원, 동일한 자료-------
v1 <- c(1,2,3,4)
v1
# 벡터 : 1차원, 동일한 자료-------
v1 <- c(1,2,3,4,5)
v1
v1 <- c(1:100)
v1
v2 <- c(1:100,2)
v2
v2 <- seq(1:100,2)
v2
v2 <- seq(1,100,3) # 시작, 종료, 증감
v2
v3 <- rep(1:5,3)
v3
v3 <- rep(1:5, each = 3) # 대상, 반복수수
v3
v1 <- c(1,5,11:20,100,201:205)
v1
list()
v2 <- c("지드래곤",'택연','아이린')
v2
v2 <- c("조이",'웬디','아이린','슬기')
v2
v3<-c(T,F,TRUE,FALSE)
v3
v4 <- c(1,5,11:20,100,201:205,"300")
v4
mode(v4)
class(v4)
sum(v4)
#is.xxxx(), as.xxxx()
is.numeric(v4)
is.character(v4)
is.logical(v3)
is.numeric(v1)
as.numeric(v4)
v9 <- as.numeric(v4)
v9
sum(v9)
v9<- as.numeric(v3)
v9
v9<- as.numeric(v2)
v9
v9<- as.character(v1)
v9
ls()
source('D:/study/r1/0106_R_start.R', encoding = 'UTF-8', echo=TRUE)
<-c(1:50)
v1
source('D:/study/r1/0106_R_start.R', encoding = 'UTF-8', echo=TRUE)
v1<-c(1:50)
v1
v1[9]
v1[9:13]
v1[10,20,30,40]
v1[10,1]
v1[1,10]
v1[c(10,20,30,40)]
v1[39]
v1[!39]
v1[c(1:38,40:50)]
v1[-39]
v1[-39,-45]
v1[c(-39,-45)]
v1<-c(1:10)
v1
m1<-matrix(v1)
m1
m1<-matrix(v1,'번호')
m1<-matrix(v1,3)
m1<-matrix(v1,2)
m1
m1<-matrix(v1,2)
m1
m1<-matrix(v1,nrow = 2, byrow = T)
m1
m2<-matrix(c(1:13),nrow = 3)
m2
m1<-c(5,40,50:52)
m2<-c(30,5,6:8)
m1
m2
m<-rbind(m1,m2)
m
m2<-c(30,5,6:7)
m<-rbind(m1,m2)
m2<-c(30,5,6:8)
m2
m<-rbind(m1,m2)
m
m<-cbind(m1,m2)
m
mode(m)
class(,)
class(m)
m3<-matrix(1:10,2)
m3
m3[1,3]
m3[3]
m3[,3]
m3[1,]
m3[1,c(3,4)]
m3[2,-8]
m3[2,c(-8)]
m3[2,-8]
m3[2,c(-8)]
m3[2,8]
m3[2,-4]
length(m3)
nrow(m3)
a1<-array(v1,c(3,2,2))
a1
mode(a1)
class(a1)
a1[3,2,1]
a1[,,1]
al[,,2]
al[,,2]
a1
al[,,2]
a1[,,2]
#List자료구조형
l1<-list('bae','아이린',30)
l1
li[1]
l1[1]
l2<-list(name=c('홍길동','심청'),age=c(20,22),home=c('서울','대전'))
l2
l2$name
l2$age
l2$home
a <- 1 #a에 1할당
a
b<-2
b
c<-3
c
d<-3.5
d
a+b
a+b+c
4/b
5*b
var1 <- c(1,2,5,7,8) # 숫자 5개로 구성된 변수 생성성
var1
var2 <- c(1:5)
var2
var3 <- seq(1,5)
var3
var4 <- seq(1,10,by=2)
var4
var5 <- seq(1,10, by = 3) # 1~10까지 3간격 연속 값으로 변수 생성성
var5
var1+2
var1+var2
# 문자로 된 변수 만들기
str1 <- 'a'
str1
str2 <- 'text'
str2
str3 <- 'Hello World!'
str3
str4 <- c('a','b','c')
str4
str5 <- c('hello', 'World','is','good')
str5
str1+2
# 숫자를 다루는 함수
x <- c(1,2,3)
x
mean(x)
max(x)
min(x) # 최소값값
min(x) # 최소값
str5
paste(str5,collapse = ",") # 쉼표를 구분자로 str5 단어들 하나로 합치기기
paste(str5,collapse = ",") # 쉼표를 구분자로 str5 단어들 하나로 합치기
x_mean <- mean(x)
x_meam
x_mean
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
x <- c('a','a','b','c')
qplot(x)
qplot(data = mpg, x = hwy)
qplot(data = mpg, x = hwy) # data에 mpg, x축에 hwy 변수 지정해 그래프 생성
# x축 cty
qplot(data = mpg, x=cty)
qplot(data = mpg, x=cty, y = hwy)
qplot(data = mpg, x=cty, y = hwy, geom = 'line')
qplot(data = mpg, x=cty, y = hwy, geom = 'boxplot')
qplot(data = mpg, x=cty, y = hwy, geom = 'boxplot', colour = drv)
install.packages("stirngr")
install.packages("stringr")
library(stringr)
remove.packages("stringr", lib="~/R/win-library/3.6")
